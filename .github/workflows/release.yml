name: Build and Release yaylog

on:
  push:
    tags:
      - 'v*'  # trigger on version tags
  workflow_dispatch:  # allow manual trigger from github UI

permissions:
  contents: write

jobs:
  build:
    name: Build yaylog for ${{ matrix.arch }}
    runs-on: ubuntu-latest  # ubuntu includes cross-compilation toolchains

    strategy:
      matrix:
        arch: [x86_64, armv7h, aarch64]
        include:
          - arch: x86_64
            goarch: amd64
          - arch: armv7h
            goarch: arm
            goarm: 7
          - arch: aarch64
            goarch: arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go 1.23.2
        uses: actions/setup-go@v4
        with:
          go-version: 1.23.2 # version from go.mod

      - name: Build yaylog binary
        run: |
          export GOOS=linux GOARCH=${{ matrix.goarch }}
          
          if [ -n "${{ matrix.goarm }}" ]; then
            export GOARM=${{ matrix.goarm }}
          fi
          
          go build -v -o yaylog-${{ matrix.arch }} ./cmd/yaylog

      - name: Upload built binary
        uses: actions/upload-artifact@v4
        with:
          name: yaylog-${{ matrix.arch }}
          path: yaylog-${{ matrix.arch }}

  release:
    name: Release yaylog
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Install makepkg for .SRCINFO generation
        run: |
          sudo apt update
          sudo apt install -y pacman fakeroot makepkg

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release
          merge-multiple: true

      - name: Package binaries with manpage
        run: |
          cp yaylog.1 ./release/

          for binary in ./release/yaylog-*; do
            arch=$(basename "$binary" | cut -d'-' -f2)
      
            tar -czvf ./release/yaylog-${arch}.tar.gz -C ./release "$(basename "$binary")" yaylog.1
          done

      - name: Create source tarball
        run: |
          git archive --format=tar.gz --prefix=yaylog-${{ github.ref_name }}/ -o ./release/yaylog-${{ github.ref_name }}.tar.gz HEAD

      - name: Generate SHA256 checksums
        run: |
          cd ./release
          sha256sum yaylog-*.tar.gz > SHA256SUMS.txt

      - name: Update yaylog-bin and yaylog-git PKGBUILDs with version and checksums  
        run: |
          git fetch origin packaging
          git checkout packaging
          
          VERSION="${GITHUB_REF#refs/tags/v}"
          CHECKSUMS_FILE=./release/SHA256SUMS.txt

          for pkg in yaylog-bin yaylog-git; do
            sed -i "s/^pkgver=.*/pkgver=${VERSION}/" $pkg/PKGBUILD
            sed -i "s/^pkgrel=.*/pkgrel=1/" $pkg/PKGBUILD
          done

          for pkg in yaylog-bin yaylog-git; do
            chmod +x update_checksums.sh
            ./update_checksums.sh $pkg/PKGBUILD $CHECKSUMS_FILE 
          done

      - name: Generate .SRCINFO for yaylog-bin and yaylog-git
        run: |
          for pkg in yaylog-bin yaylog-git; do
            (cd $pkg && makepkg --printsrcinfo --noconfirm > .SRCINFO)
          done

      - name: Commit updated PKGBUILD and .SRCINFO to packaging branch
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          for pkg in yaylog-bin yaylog-git; do
            git add $pkg/PKGBUILD $pkg/.SRCINFO
          done
          
          git commit -m "Update packaging for release ${{ github.ref_name }}"
          git push origin packaging

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./release/yaylog-*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

