.\" Man page for yaylog
.TH yaylog 1 "March 2025" "yaylog 3.40.0" "User Commands"
.SH NAME
yaylog \- List and query installed packages on Arch-based systems.
.SH SYNOPSIS
.B yaylog
.RI [ \-l | \-\-limit <number> ] [ \-a | \-\-all ] [ \-w <field>=<value> ] [ \-s | \-\-select <list> ] [ \-S | \-\-select-add <list> ] [ \-A | \-\-select-all ] [ \-O | \-\-order <field>:<direction> ] [ \-\-json ] [ \-\-no-headers ] [ \-\-full-timestamp ] [ \-\-no-progress ] [ \-h | \-\-help ]

.SH DESCRIPTION
.B yaylog
is a standalone CLI utility for Arch and Arch-based Linux distributions to list and query installed packages. It works with any package manager that uses ALPM,
including
.B yay,
.B paru,
.B pamac,
.B pacman,
and others.

The utility provides powerful querying capabilities, including:
- Installation date queries
- Package size queries
- Install reason queries
- Reverse dependency lookups
- Conflict queries
- Dependency queries
- Provision queries
- Package name queries
- Architecture queries
- Sorting and JSON output

.SH OPTIONS
.TP
.B \-l, \-\-limit <number>
Display the specified number of recent packages (default: 20). Ignored if
.B \-a
or
.B \-\-all
is used.
.TP
.B \-a, \-\-all
Show all installed packages, ignoring
.B \-l
/
.B \-\-limit
.TP
.B \-w, \-\-where <field>=<value>
Apply package queries. This option can be used multiple times.

.PP
Supported queries:
.IP
.B date=<YYYY-MM-DD>
: Packages installed on the specified date.
.IP
.B date=YYYY-MM-DD:
: Packages installed on or after the date.
.IP
.B date=:YYYY-MM-DD
: Packages installed up to the specified date.
.IP
.B date=YYYY-MM-DD:YYYY-MM-DD
: Packages installed within a date range.
.IP
.B size=10MB:
: Packages larger than 10MB.
.IP
.B size=:500KB
: Packages up to 500KB.
.IP
.B size=1GB:5GB
: Packages between 1GB and 5GB.
.IP
.B reason=explicit
: Explicitly installed packages.
.IP
.B reason=dependencies
: Packages installed as dependencies.
.IP
.B name=firefox
: Match package names. Supports comma-separated list.
.IP
.B required-by=vlc
: Packages required by "vlc".
.IP
.B depends=glibc
: Packages that depend on "glibc".
.IP
.B provides=awk
: Packages that provide "awk".
.IP
.B conflicts=linuxqq
: Packages that conflict with "linuxqq".
.IP
.B arch=x86_64
: Packages built for specified architectures. "any" is also valid.

.PP
Example:
.EX
yaylog -w reason=explicit -w size=100MB:
.EE

.TP
.B \-O, \-\-order <field>:<direction>
Sort results by the specified field, ascending or descending directions (asc/desc).
Available fields for sorting.
.IP
.B date
(default): Sort by installation date.
.IP
.B name
: Sort alphabetically by package name.
.IP
.B size
: Sort by size on disk
.IP
.B license
: Sort alphabetically by package license.

.TP
.B \-\-no-headers
Omit headers in table output. Useful for scripting.

.TP
.B \-s, \-\-select <list>
Specify a comma-separated list of fields to display. Overrides default fields.

.TP
.B \-S, \-\-select-add <list>
Add fields to default output or to
.B \-\-select-all

.TP
.B \-A, \-\-select-all
Display all available fields.

.TP
.B \-\-json
Output results in JSON format. Overrides
.B \-\-full-timestamp

.PP
Example:
.EX
yaylog -w name=sqlite --json -s name,version,size
.EE

.TP
.B \-\-full-timestamp
Show full date + time instead of just the date.

.TP
.B \-\-no-progress
Suppress progress output, even in interactive mode.

.TP
.B \-h, \-\-help
Show help information.

.SH EXAMPLES
.TP
Last 10 installed packages:
.EX
yaylog -l 10
.EE
.TP
All explicitly installed packages:
.EX
yaylog -w reason=explicit
.EE
.TP
Between 100MBâ€“1GB, installed before June 30, 2024:
.EX
yaylog -w size=100MB:1GB -w date=:2024-06-30
.EE
.TP
Packages required by "firefox":
.EX
yaylog -w required-by=firefox
.EE
.TP
JSON output:
.EX
yaylog --json
.EE
.TP
Save explicit packages to JSON file:
.EX
yaylog -w reason=explicit --json > explicit-packages.json
.EE
.TP
Show names and sizes without headers:
.EX
yaylog --no-headers -s name,size
.EE
.TP
Packages that depend on "glibc" and are required by "ffmpeg":
.EX
yaylog -w depends=glibc -w required-by=ffmpeg
.EE
.TP
Packages built for "any" architecture:
.EX
yaylog -w arch=any
.EE

.SH AUTHOR
Written by Fernando Nunez <me@fernandonunez.io>.

.SH LICENSE
MIT License. See
.B LICENSE
for details.

.SH BUGS
Report bugs at:
.UR https://github.com/Zweih/yaylog
.UE

.SH SEE ALSO
.BR pacman(8),
.BR yay(8)

